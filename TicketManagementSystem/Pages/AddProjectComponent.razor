@page "/addproject"
@using UseCases


@inject NavigationManager NavigationManager
@inject UseCases.UseCaseInterfaces.IViewProjectsUseCase ViewCompaniesUseCase
@inject UseCases.UseCaseInterfaces.IAddProjectUseCase AddProjectUseCase
@inject IViewCompaniesUseCase ViewCompaniesUseCase

<h3>Add Project</h3>

@if (project != null)
{
    <EditForm Model = "project" class = "form-inline" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary> </ValidationSummary>

        <div class="form-group">
            <label for="name">Name</label>
            <InputText id="name" @bind-Value="project.Name" class="form-control"></InputText>
        </div>

       <div class="form-group">
            <label for="company">Company</label>
            <select id="company" @bind="project.CompanyId" class="form-control">
                <option selected></option>
                @foreach (var comp in companies)
                {
                    <option value ="@comp.CompanyId">@comp.Name</option>
                }
            </select>
        </div>

        <div class="form-group">
            <label for="description">Description</label>
            <InputText id="description" @bind-Value="project.Description" class="form-control"></InputText>
        </div>

        <button type="submit" class="btn btn-primary">Save</button>
        <button type="button" class="btn btn-primary" @onclick="OnCancel">Cancel</button>
    </EditForm>
}


@code {
    private Project project;
    private IEnumerable<Company> companies;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        project = new Project();
        companies = ViewCompaniesUseCase.Execute();
    }

    private void OnValidSubmit()
    {
        AddProjectUseCase.Execute(project);
        NavigationManager.NavigateTo("/projects");

    }

    private void OnCancel()
    {
        NavigationManager.NavigateTo("/projects");
    }

}

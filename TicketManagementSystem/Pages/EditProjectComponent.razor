
@page "/editproject/{projectId}"

@using UseCases
@using UseCases.UseCaseInterfaces

@inject NavigationManager NavigationManager
@inject IAddProjectUseCase AddProjectUseCase
@inject IGetProjectByIdUseCase GetProjectByIdUseCase
@inject IEditProjectUseCase EditProjectUseCase
@inject IViewCompaniesUseCase ViewCompaniesUseCase

<h3>Edit Project</h3>
<br />
@if (project != null)
{
    <EditForm Model = "project" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary> </ValidationSummary>

        <div class="form-group">
            <label for="name">Name</label>
            <InputText id="name" @bind-Value="project.Name" class="form-control"></InputText>
        </div>

        <div class="form-group">
            <label for="company">Company</label>
            <select id="company" @bind="project.CompanyId" class="form-control">
                <option selected></option>
                @foreach (var comp in companies)
                {
                    <option value ="@comp.CompanyId">@comp.Name</option>
                }
            </select>
        </div>

        <div class="form-group">
            <label for="name">Description</label>
            <InputText id="name" @bind-Value="project.Description" class="form-control"></InputText>
        </div>

        <button type="submit" class="btn btn-primary">Save</button>
        <button type="button" class="btn btn-primary" @onclick="OnCancel">Cancel</button>
    </EditForm>
}


@code {
    [Parameter]
    public string ProjectId { get; set; }

    private Project project;
    private IEnumerable<Company> companies;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        companies = ViewCompaniesUseCase.Execute();
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        if(int.TryParse(this.ProjectId,out int IProjectId))
        {
            var proj = GetProjectByIdUseCase.Execute(IProjectId);
            this.project = new Project { 
                ProjectId = proj.ProjectId, 
                Name = proj.Name,
                CompanyId = proj.CompanyId,
                Description = proj.Description
        };

        }

    }

    private void OnValidSubmit()
    {
        EditProjectUseCase.Execute(this.project);
        NavigationManager.NavigateTo("/projects");

    }

    private void OnCancel()
    {
        NavigationManager.NavigateTo("/projects");
    }

}
